/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/gallery/route";
exports.ids = ["app/api/gallery/route"];
exports.modules = {

/***/ "(rsc)/./app/api/gallery/route.ts":
/*!**********************************!*\
  !*** ./app/api/gallery/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_db_astra__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/db/astra */ \"(rsc)/./app/lib/db/astra.ts\");\n\n\nasync function GET() {\n    try {\n        console.log(\"GET /api/gallery - Starting request\");\n        const records = await (0,_lib_db_astra__WEBPACK_IMPORTED_MODULE_1__.getAllImages)();\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(records);\n    } catch (error) {\n        console.error(\"GET /api/gallery - Error:\", error);\n        if (error instanceof Error) {\n            console.error(\"Error details:\", {\n                message: error.message,\n                stack: error.stack,\n                name: error.name\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to fetch gallery\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        console.log(\"POST /api/gallery - Starting request\");\n        const body = await request.json();\n        console.log(\"POST /api/gallery - Request body:\", body);\n        if (!body.username || !body.image_url) {\n            console.error(\"POST /api/gallery - Missing required fields\");\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Missing required fields: username and image_url\"\n            }, {\n                status: 400\n            });\n        }\n        const imageRecord = {\n            username: body.username,\n            image_url: body.image_url,\n            created_at: new Date().toISOString()\n        };\n        const result = await (0,_lib_db_astra__WEBPACK_IMPORTED_MODULE_1__.upsertImage)(imageRecord);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(result);\n    } catch (error) {\n        console.error(\"POST /api/gallery - Error:\", error);\n        if (error instanceof Error) {\n            console.error(\"Error details:\", {\n                message: error.message,\n                stack: error.stack,\n                name: error.name\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to create/update image record\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9hcHAvYXBpL2dhbGxlcnkvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUF3RDtBQUNPO0FBR3hELGVBQWVHO0lBQ3BCLElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDO1FBQ1osTUFBTUMsVUFBVSxNQUFNTCwyREFBWUE7UUFDbEMsT0FBT0QscURBQVlBLENBQUNPLElBQUksQ0FBQ0Q7SUFDM0IsRUFBRSxPQUFPRSxPQUFPO1FBQ2RKLFFBQVFJLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLElBQUlBLGlCQUFpQkMsT0FBTztZQUMxQkwsUUFBUUksS0FBSyxDQUFDLGtCQUFrQjtnQkFDOUJFLFNBQVNGLE1BQU1FLE9BQU87Z0JBQ3RCQyxPQUFPSCxNQUFNRyxLQUFLO2dCQUNsQkMsTUFBTUosTUFBTUksSUFBSTtZQUNsQjtRQUNGO1FBQ0EsT0FBT1oscURBQVlBLENBQUNPLElBQUksQ0FBQztZQUFFQyxPQUFPO1FBQTBCLEdBQUc7WUFBRUssUUFBUTtRQUFJO0lBQy9FO0FBQ0Y7QUFFTyxlQUFlQyxLQUFLQyxPQUFvQjtJQUM3QyxJQUFJO1FBQ0ZYLFFBQVFDLEdBQUcsQ0FBQztRQUNaLE1BQU1XLE9BQU8sTUFBTUQsUUFBUVIsSUFBSTtRQUMvQkgsUUFBUUMsR0FBRyxDQUFDLHFDQUFxQ1c7UUFFakQsSUFBSSxDQUFDQSxLQUFLQyxRQUFRLElBQUksQ0FBQ0QsS0FBS0UsU0FBUyxFQUFFO1lBQ3JDZCxRQUFRSSxLQUFLLENBQUM7WUFDZCxPQUFPUixxREFBWUEsQ0FBQ08sSUFBSSxDQUN0QjtnQkFBRUMsT0FBTztZQUFrRCxHQUMzRDtnQkFBRUssUUFBUTtZQUFJO1FBRWxCO1FBRUEsTUFBTU0sY0FBd0M7WUFDNUNGLFVBQVVELEtBQUtDLFFBQVE7WUFDdkJDLFdBQVdGLEtBQUtFLFNBQVM7WUFDekJFLFlBQVksSUFBSUMsT0FBT0MsV0FBVztRQUNwQztRQUVBLE1BQU1DLFNBQVMsTUFBTXJCLDBEQUFXQSxDQUFDaUI7UUFDakMsT0FBT25CLHFEQUFZQSxDQUFDTyxJQUFJLENBQUNnQjtJQUMzQixFQUFFLE9BQU9mLE9BQU87UUFDZEosUUFBUUksS0FBSyxDQUFDLDhCQUE4QkE7UUFDNUMsSUFBSUEsaUJBQWlCQyxPQUFPO1lBQzFCTCxRQUFRSSxLQUFLLENBQUMsa0JBQWtCO2dCQUM5QkUsU0FBU0YsTUFBTUUsT0FBTztnQkFDdEJDLE9BQU9ILE1BQU1HLEtBQUs7Z0JBQ2xCQyxNQUFNSixNQUFNSSxJQUFJO1lBQ2xCO1FBQ0Y7UUFDQSxPQUFPWixxREFBWUEsQ0FBQ08sSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQXVDLEdBQ2hEO1lBQUVLLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyIvVXNlcnMvZGF2aWQuZ2lsYXJkaS9jb2RlYmVhc3RzL2FwcC9hcGkvZ2FsbGVyeS9yb3V0ZS50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVxdWVzdCwgTmV4dFJlc3BvbnNlIH0gZnJvbSBcIm5leHQvc2VydmVyXCI7XG5pbXBvcnQgeyBnZXRBbGxJbWFnZXMsIHVwc2VydEltYWdlIH0gZnJvbSBcIi4uLy4uL2xpYi9kYi9hc3RyYVwiO1xuaW1wb3J0IHR5cGUgeyBJbWFnZVJlY29yZCB9IGZyb20gXCIuLi8uLi9saWIvZGIvYXN0cmFcIjtcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVCgpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZyhcIkdFVCAvYXBpL2dhbGxlcnkgLSBTdGFydGluZyByZXF1ZXN0XCIpO1xuICAgIGNvbnN0IHJlY29yZHMgPSBhd2FpdCBnZXRBbGxJbWFnZXMoKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocmVjb3Jkcyk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkdFVCAvYXBpL2dhbGxlcnkgLSBFcnJvcjpcIiwgZXJyb3IpO1xuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGV0YWlsczpcIiwge1xuICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2ssXG4gICAgICAgIG5hbWU6IGVycm9yLm5hbWVcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oeyBlcnJvcjogXCJGYWlsZWQgdG8gZmV0Y2ggZ2FsbGVyeVwiIH0sIHsgc3RhdHVzOiA1MDAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIFBPU1QocmVxdWVzdDogTmV4dFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zb2xlLmxvZyhcIlBPU1QgL2FwaS9nYWxsZXJ5IC0gU3RhcnRpbmcgcmVxdWVzdFwiKTtcbiAgICBjb25zdCBib2R5ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XG4gICAgY29uc29sZS5sb2coXCJQT1NUIC9hcGkvZ2FsbGVyeSAtIFJlcXVlc3QgYm9keTpcIiwgYm9keSk7XG5cbiAgICBpZiAoIWJvZHkudXNlcm5hbWUgfHwgIWJvZHkuaW1hZ2VfdXJsKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiUE9TVCAvYXBpL2dhbGxlcnkgLSBNaXNzaW5nIHJlcXVpcmVkIGZpZWxkc1wiKTtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogXCJNaXNzaW5nIHJlcXVpcmVkIGZpZWxkczogdXNlcm5hbWUgYW5kIGltYWdlX3VybFwiIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCBpbWFnZVJlY29yZDogT21pdDxJbWFnZVJlY29yZCwgJ19pZCc+ID0ge1xuICAgICAgdXNlcm5hbWU6IGJvZHkudXNlcm5hbWUsXG4gICAgICBpbWFnZV91cmw6IGJvZHkuaW1hZ2VfdXJsLFxuICAgICAgY3JlYXRlZF9hdDogbmV3IERhdGUoKS50b0lTT1N0cmluZygpXG4gICAgfTtcblxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHVwc2VydEltYWdlKGltYWdlUmVjb3JkKTtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24ocmVzdWx0KTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiUE9TVCAvYXBpL2dhbGxlcnkgLSBFcnJvcjpcIiwgZXJyb3IpO1xuICAgIGlmIChlcnJvciBpbnN0YW5jZW9mIEVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZGV0YWlsczpcIiwge1xuICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlLFxuICAgICAgICBzdGFjazogZXJyb3Iuc3RhY2ssXG4gICAgICAgIG5hbWU6IGVycm9yLm5hbWVcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiBcIkZhaWxlZCB0byBjcmVhdGUvdXBkYXRlIGltYWdlIHJlY29yZFwiIH0sXG4gICAgICB7IHN0YXR1czogNTAwIH1cbiAgICApO1xuICB9XG59ICJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXRBbGxJbWFnZXMiLCJ1cHNlcnRJbWFnZSIsIkdFVCIsImNvbnNvbGUiLCJsb2ciLCJyZWNvcmRzIiwianNvbiIsImVycm9yIiwiRXJyb3IiLCJtZXNzYWdlIiwic3RhY2siLCJuYW1lIiwic3RhdHVzIiwiUE9TVCIsInJlcXVlc3QiLCJib2R5IiwidXNlcm5hbWUiLCJpbWFnZV91cmwiLCJpbWFnZVJlY29yZCIsImNyZWF0ZWRfYXQiLCJEYXRlIiwidG9JU09TdHJpbmciLCJyZXN1bHQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./app/api/gallery/route.ts\n");

/***/ }),

/***/ "(rsc)/./app/lib/db/astra.ts":
/*!*****************************!*\
  !*** ./app/lib/db/astra.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getAllImages: () => (/* binding */ getAllImages),\n/* harmony export */   getAstraClient: () => (/* binding */ getAstraClient),\n/* harmony export */   getImageByUsername: () => (/* binding */ getImageByUsername),\n/* harmony export */   getUserDetails: () => (/* binding */ getUserDetails),\n/* harmony export */   upsertImage: () => (/* binding */ upsertImage)\n/* harmony export */ });\n/* harmony import */ var _datastax_astra_db_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @datastax/astra-db-ts */ \"(rsc)/./node_modules/@datastax/astra-db-ts/dist/index.js\");\n/* harmony import */ var _datastax_astra_db_ts__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_datastax_astra_db_ts__WEBPACK_IMPORTED_MODULE_0__);\n\n// Database client singleton\nlet astraClient = null;\nasync function getAstraClient() {\n    if (astraClient === null) {\n        const endpoint = process.env.ASTRA_DB_ENDPOINT;\n        const token = process.env.ASTRA_DB_APPLICATION_TOKEN;\n        if (!endpoint || !token) {\n            throw new Error(\"Missing required Astra DB configuration\");\n        }\n        try {\n            console.log(\"Connecting to Astra DB with endpoint:\", endpoint);\n            const client = new _datastax_astra_db_ts__WEBPACK_IMPORTED_MODULE_0__.DataAPIClient(token);\n            astraClient = client.db(endpoint);\n            console.log(\"Successfully connected to Astra DB\");\n        } catch (error) {\n            console.error(\"Failed to connect to Astra DB:\", error);\n            throw error;\n        }\n    }\n    return astraClient;\n}\n// Collection getters\nasync function getImagesCollection() {\n    const client = await getAstraClient();\n    return client.collection(\"images\");\n}\nasync function getUserDetailsCollection() {\n    const client = await getAstraClient();\n    return client.collection(\"github_user_details\");\n}\n// Image operations\nasync function getAllImages() {\n    try {\n        console.log(\"getAllImages - Fetching images collection\");\n        const collection = await getImagesCollection();\n        console.log(\"getAllImages - Finding all records\");\n        const records = await collection.find().toArray();\n        console.log(`getAllImages - Found ${records.length} records`);\n        return records;\n    } catch (error) {\n        console.error(\"getAllImages - Error:\", error);\n        throw error;\n    }\n}\nasync function getImageByUsername(username) {\n    try {\n        const normalizedUsername = username.toLowerCase();\n        console.log(`getImageByUsername - Finding image for ${normalizedUsername}`);\n        const collection = await getImagesCollection();\n        const records = await collection.find({\n            username: normalizedUsername\n        }).toArray();\n        console.log(`getImageByUsername - Found ${records.length} records`);\n        if (!records.length) {\n            return null;\n        }\n        // Return the most recent image if multiple exist\n        return records[0];\n    } catch (error) {\n        console.error(\"getImageByUsername - Error:\", error);\n        throw error;\n    }\n}\nasync function upsertImage(imageData) {\n    try {\n        const normalizedUsername = imageData.username.toLowerCase();\n        console.log(`upsertImage - Processing image for ${normalizedUsername}`);\n        const collection = await getImagesCollection();\n        // Find existing record\n        const existingRecord = await collection.findOne({\n            username: normalizedUsername\n        });\n        const imageRecord = {\n            ...imageData,\n            username: normalizedUsername\n        };\n        let result;\n        if (existingRecord) {\n            // Update existing record\n            console.log(`upsertImage - Updating existing record: ${existingRecord._id}`);\n            result = await collection.updateOne({\n                _id: existingRecord._id\n            }, {\n                $set: imageRecord\n            });\n        } else {\n            // Insert new record\n            console.log(\"upsertImage - Creating new record\");\n            result = await collection.insertOne(imageRecord);\n        }\n        console.log(\"upsertImage - Operation result:\", result);\n        return result;\n    } catch (error) {\n        console.error(\"upsertImage - Error:\", error);\n        throw error;\n    }\n}\n// User details operations - Reverted to parse body_blob\nasync function getUserDetails(username) {\n    console.log(`DB Service: Fetching user details for username: ${username}`);\n    const normalizedUsername = username.toLowerCase();\n    try {\n        const userDetailsCollection = await getUserDetailsCollection();\n        // Find the document based on session_id, only fetch necessary fields\n        const record = await userDetailsCollection.findOne({\n            session_id: normalizedUsername\n        }, {\n            projection: {\n                _id: 1,\n                session_id: 1,\n                body_blob: 1\n            }\n        } // Fetch blob and ids\n        );\n        console.log(`DB Service: Found record (using session_id):`, record);\n        if (record?.body_blob) {\n            try {\n                const bodyBlob = JSON.parse(record.body_blob);\n                console.log(`DB Service: Parsed body_blob:`, bodyBlob);\n                // Assuming structure is { type: 'ai', data: { content: 'lang|prompt|url' } } \n                // AND potentially other fields like repoCount, animalSelection under data\n                if (bodyBlob.type === 'ai' && bodyBlob.data?.content) {\n                    const content = bodyBlob.data.content;\n                    const [languages, prompt, githubUrl] = content.split('|').map((field)=>field.trim());\n                    // Extract potential extra fields from bodyBlob.data\n                    const repoCount = bodyBlob.data.repoCount;\n                    const animalSelection = bodyBlob.data.animalSelection;\n                    const userDetails = {\n                        _id: record._id,\n                        session_id: record.session_id,\n                        username: record.session_id,\n                        languages,\n                        prompt,\n                        githubUrl,\n                        repoCount,\n                        animalSelection\n                    };\n                    console.log(`DB Service: Parsed user details from blob:`, userDetails);\n                    return userDetails;\n                } else {\n                    console.warn(`DB Service: body_blob found but content format unexpected for ${normalizedUsername}`);\n                }\n            } catch (parseError) {\n                console.error(`DB Service: Error parsing body_blob for ${normalizedUsername}:`, parseError);\n            }\n        }\n        console.log(`DB Service: No valid user details found or parsed for ${normalizedUsername}`);\n        return null;\n    } catch (error) {\n        console.error(\"DB Service: Error fetching user details:\", error);\n        return null;\n    }\n}\n// Export the client getter for advanced use cases\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFFBQVFJLEtBQUssQ0FBQyxLQUFLQyxHQUFHLENBQUMsQ0FBQ0MsUUFBa0JBLE1BQU1DLElBQUk7b0JBRTNGLG9EQUFvRDtvQkFDcEQsTUFBTUMsWUFBWWIsU0FBU0ksSUFBSSxDQUFDUyxTQUFTO29CQUN6QyxNQUFNQyxrQkFBa0JkLFNBQVNJLElBQUksQ0FBQ1UsZUFBZTtvQkFFckQsTUFBTUMsY0FBaUM7d0JBQ3JDekIsS0FBS00sT0FBT04sR0FBRzt3QkFDZk8sWUFBWUQsT0FBT0MsVUFBVTt3QkFDN0JoQixVQUFVZSxPQUFPQyxVQUFVO3dCQUMzQlM7d0JBQ0FDO3dCQUNBQzt3QkFDQUs7d0JBQ0FDO29CQUNGO29CQUNBL0MsUUFBUUMsR0FBRyxDQUFDLENBQUMsMENBQTBDLENBQUMsRUFBRStDO29CQUMxRCxPQUFPQTtnQkFDVCxPQUFPO29CQUNMaEQsUUFBUWlELElBQUksQ0FBQyxDQUFDLDhEQUE4RCxFQUFFbEMsb0JBQW9CO2dCQUNwRztZQUNGLEVBQUUsT0FBT21DLFlBQVk7Z0JBQ25CbEQsUUFBUUksS0FBSyxDQUFDLENBQUMsd0NBQXdDLEVBQUVXLG1CQUFtQixDQUFDLENBQUMsRUFBRW1DO1lBQ2xGO1FBQ0Y7UUFFQWxELFFBQVFDLEdBQUcsQ0FBQyxDQUFDLHNEQUFzRCxFQUFFYyxvQkFBb0I7UUFDekYsT0FBTztJQUNULEVBQUUsT0FBT1gsT0FBTztRQUNkSixRQUFRSSxLQUFLLENBQUMsNENBQTRDQTtRQUMxRCxPQUFPO0lBQ1Q7QUFDRjtBQUVBLGtEQUFrRDtBQUN4QiIsInNvdXJjZXMiOlsiL1VzZXJzL2RhdmlkLmdpbGFyZGkvY29kZWJlYXN0cy9hcHAvbGliL2RiL2FzdHJhLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGFBUElDbGllbnQgfSBmcm9tIFwiQGRhdGFzdGF4L2FzdHJhLWRiLXRzXCI7XG5cbi8vIFR5cGVzXG5leHBvcnQgdHlwZSBJbWFnZVJlY29yZCA9IHtcbiAgX2lkPzogc3RyaW5nO1xuICB1c2VybmFtZTogc3RyaW5nO1xuICBpbWFnZV91cmw6IHN0cmluZztcbiAgY3JlYXRlZF9hdDogc3RyaW5nO1xufTtcblxuZXhwb3J0IHR5cGUgVXNlckRldGFpbHNSZWNvcmQgPSB7XG4gIF9pZD86IHN0cmluZztcbiAgc2Vzc2lvbl9pZDogc3RyaW5nO1xuICB1c2VybmFtZTogc3RyaW5nO1xuICBsYW5ndWFnZXM6IHN0cmluZztcbiAgcHJvbXB0OiBzdHJpbmc7XG4gIGdpdGh1YlVybDogc3RyaW5nO1xuICByZXBvQ291bnQ/OiBudW1iZXI7XG4gIGFuaW1hbFNlbGVjdGlvbj86IGFueVtdW107XG59O1xuXG4vLyBEYXRhYmFzZSBjbGllbnQgc2luZ2xldG9uXG5sZXQgYXN0cmFDbGllbnQ6IGFueSA9IG51bGw7XG5cbmFzeW5jIGZ1bmN0aW9uIGdldEFzdHJhQ2xpZW50KCkge1xuICBpZiAoYXN0cmFDbGllbnQgPT09IG51bGwpIHtcbiAgICBjb25zdCBlbmRwb2ludCA9IHByb2Nlc3MuZW52LkFTVFJBX0RCX0VORFBPSU5UO1xuICAgIGNvbnN0IHRva2VuID0gcHJvY2Vzcy5lbnYuQVNUUkFfREJfQVBQTElDQVRJT05fVE9LRU47XG5cbiAgICBpZiAoIWVuZHBvaW50IHx8ICF0b2tlbikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTWlzc2luZyByZXF1aXJlZCBBc3RyYSBEQiBjb25maWd1cmF0aW9uXCIpO1xuICAgIH1cblxuICAgIHRyeSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3RpbmcgdG8gQXN0cmEgREIgd2l0aCBlbmRwb2ludDpcIiwgZW5kcG9pbnQpO1xuICAgICAgY29uc3QgY2xpZW50ID0gbmV3IERhdGFBUElDbGllbnQodG9rZW4pO1xuICAgICAgYXN0cmFDbGllbnQgPSBjbGllbnQuZGIoZW5kcG9pbnQpO1xuICAgICAgY29uc29sZS5sb2coXCJTdWNjZXNzZnVsbHkgY29ubmVjdGVkIHRvIEFzdHJhIERCXCIpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKFwiRmFpbGVkIHRvIGNvbm5lY3QgdG8gQXN0cmEgREI6XCIsIGVycm9yKTtcbiAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgfVxuICByZXR1cm4gYXN0cmFDbGllbnQ7XG59XG5cbi8vIENvbGxlY3Rpb24gZ2V0dGVyc1xuYXN5bmMgZnVuY3Rpb24gZ2V0SW1hZ2VzQ29sbGVjdGlvbigpIHtcbiAgY29uc3QgY2xpZW50ID0gYXdhaXQgZ2V0QXN0cmFDbGllbnQoKTtcbiAgcmV0dXJuIGNsaWVudC5jb2xsZWN0aW9uKFwiaW1hZ2VzXCIpO1xufVxuXG5hc3luYyBmdW5jdGlvbiBnZXRVc2VyRGV0YWlsc0NvbGxlY3Rpb24oKSB7XG4gIGNvbnN0IGNsaWVudCA9IGF3YWl0IGdldEFzdHJhQ2xpZW50KCk7XG4gIHJldHVybiBjbGllbnQuY29sbGVjdGlvbihcImdpdGh1Yl91c2VyX2RldGFpbHNcIik7XG59XG5cbi8vIEltYWdlIG9wZXJhdGlvbnNcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRBbGxJbWFnZXMoKSB7XG4gIHRyeSB7XG4gICAgY29uc29sZS5sb2coXCJnZXRBbGxJbWFnZXMgLSBGZXRjaGluZyBpbWFnZXMgY29sbGVjdGlvblwiKTtcbiAgICBjb25zdCBjb2xsZWN0aW9uID0gYXdhaXQgZ2V0SW1hZ2VzQ29sbGVjdGlvbigpO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKFwiZ2V0QWxsSW1hZ2VzIC0gRmluZGluZyBhbGwgcmVjb3Jkc1wiKTtcbiAgICBjb25zdCByZWNvcmRzID0gYXdhaXQgY29sbGVjdGlvbi5maW5kKCkudG9BcnJheSgpO1xuICAgIGNvbnNvbGUubG9nKGBnZXRBbGxJbWFnZXMgLSBGb3VuZCAke3JlY29yZHMubGVuZ3RofSByZWNvcmRzYCk7XG4gICAgXG4gICAgcmV0dXJuIHJlY29yZHM7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcImdldEFsbEltYWdlcyAtIEVycm9yOlwiLCBlcnJvcik7XG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEltYWdlQnlVc2VybmFtZSh1c2VybmFtZTogc3RyaW5nKSB7XG4gIHRyeSB7XG4gICAgY29uc3Qgbm9ybWFsaXplZFVzZXJuYW1lID0gdXNlcm5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zb2xlLmxvZyhgZ2V0SW1hZ2VCeVVzZXJuYW1lIC0gRmluZGluZyBpbWFnZSBmb3IgJHtub3JtYWxpemVkVXNlcm5hbWV9YCk7XG4gICAgXG4gICAgY29uc3QgY29sbGVjdGlvbiA9IGF3YWl0IGdldEltYWdlc0NvbGxlY3Rpb24oKTtcbiAgICBjb25zdCByZWNvcmRzID0gYXdhaXQgY29sbGVjdGlvbi5maW5kKHsgdXNlcm5hbWU6IG5vcm1hbGl6ZWRVc2VybmFtZSB9KS50b0FycmF5KCk7XG4gICAgY29uc29sZS5sb2coYGdldEltYWdlQnlVc2VybmFtZSAtIEZvdW5kICR7cmVjb3Jkcy5sZW5ndGh9IHJlY29yZHNgKTtcblxuICAgIGlmICghcmVjb3Jkcy5sZW5ndGgpIHtcbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cblxuICAgIC8vIFJldHVybiB0aGUgbW9zdCByZWNlbnQgaW1hZ2UgaWYgbXVsdGlwbGUgZXhpc3RcbiAgICByZXR1cm4gcmVjb3Jkc1swXTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiZ2V0SW1hZ2VCeVVzZXJuYW1lIC0gRXJyb3I6XCIsIGVycm9yKTtcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBzZXJ0SW1hZ2UoaW1hZ2VEYXRhOiBPbWl0PEltYWdlUmVjb3JkLCAnX2lkJz4pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBub3JtYWxpemVkVXNlcm5hbWUgPSBpbWFnZURhdGEudXNlcm5hbWUudG9Mb3dlckNhc2UoKTtcbiAgICBjb25zb2xlLmxvZyhgdXBzZXJ0SW1hZ2UgLSBQcm9jZXNzaW5nIGltYWdlIGZvciAke25vcm1hbGl6ZWRVc2VybmFtZX1gKTtcblxuICAgIGNvbnN0IGNvbGxlY3Rpb24gPSBhd2FpdCBnZXRJbWFnZXNDb2xsZWN0aW9uKCk7XG4gICAgXG4gICAgLy8gRmluZCBleGlzdGluZyByZWNvcmRcbiAgICBjb25zdCBleGlzdGluZ1JlY29yZCA9IGF3YWl0IGNvbGxlY3Rpb24uZmluZE9uZSh7IHVzZXJuYW1lOiBub3JtYWxpemVkVXNlcm5hbWUgfSk7XG4gICAgXG4gICAgY29uc3QgaW1hZ2VSZWNvcmQgPSB7XG4gICAgICAuLi5pbWFnZURhdGEsXG4gICAgICB1c2VybmFtZTogbm9ybWFsaXplZFVzZXJuYW1lXG4gICAgfTtcblxuICAgIGxldCByZXN1bHQ7XG4gICAgaWYgKGV4aXN0aW5nUmVjb3JkKSB7XG4gICAgICAvLyBVcGRhdGUgZXhpc3RpbmcgcmVjb3JkXG4gICAgICBjb25zb2xlLmxvZyhgdXBzZXJ0SW1hZ2UgLSBVcGRhdGluZyBleGlzdGluZyByZWNvcmQ6ICR7ZXhpc3RpbmdSZWNvcmQuX2lkfWApO1xuICAgICAgcmVzdWx0ID0gYXdhaXQgY29sbGVjdGlvbi51cGRhdGVPbmUoXG4gICAgICAgIHsgX2lkOiBleGlzdGluZ1JlY29yZC5faWQgfSxcbiAgICAgICAgeyAkc2V0OiBpbWFnZVJlY29yZCB9XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBJbnNlcnQgbmV3IHJlY29yZFxuICAgICAgY29uc29sZS5sb2coXCJ1cHNlcnRJbWFnZSAtIENyZWF0aW5nIG5ldyByZWNvcmRcIik7XG4gICAgICByZXN1bHQgPSBhd2FpdCBjb2xsZWN0aW9uLmluc2VydE9uZShpbWFnZVJlY29yZCk7XG4gICAgfVxuXG4gICAgY29uc29sZS5sb2coXCJ1cHNlcnRJbWFnZSAtIE9wZXJhdGlvbiByZXN1bHQ6XCIsIHJlc3VsdCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwidXBzZXJ0SW1hZ2UgLSBFcnJvcjpcIiwgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbi8vIFVzZXIgZGV0YWlscyBvcGVyYXRpb25zIC0gUmV2ZXJ0ZWQgdG8gcGFyc2UgYm9keV9ibG9iXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VXNlckRldGFpbHModXNlcm5hbWU6IHN0cmluZyk6IFByb21pc2U8VXNlckRldGFpbHNSZWNvcmQgfCBudWxsPiB7XG4gIGNvbnNvbGUubG9nKGBEQiBTZXJ2aWNlOiBGZXRjaGluZyB1c2VyIGRldGFpbHMgZm9yIHVzZXJuYW1lOiAke3VzZXJuYW1lfWApO1xuICBjb25zdCBub3JtYWxpemVkVXNlcm5hbWUgPSB1c2VybmFtZS50b0xvd2VyQ2FzZSgpO1xuICB0cnkge1xuICAgIGNvbnN0IHVzZXJEZXRhaWxzQ29sbGVjdGlvbiA9IGF3YWl0IGdldFVzZXJEZXRhaWxzQ29sbGVjdGlvbigpO1xuICAgIFxuICAgIC8vIEZpbmQgdGhlIGRvY3VtZW50IGJhc2VkIG9uIHNlc3Npb25faWQsIG9ubHkgZmV0Y2ggbmVjZXNzYXJ5IGZpZWxkc1xuICAgIGNvbnN0IHJlY29yZCA9IGF3YWl0IHVzZXJEZXRhaWxzQ29sbGVjdGlvbi5maW5kT25lKFxuICAgICAgeyBzZXNzaW9uX2lkOiBub3JtYWxpemVkVXNlcm5hbWUgfSwgXG4gICAgICB7IHByb2plY3Rpb246IHsgX2lkOiAxLCBzZXNzaW9uX2lkOiAxLCBib2R5X2Jsb2I6IDEgfSB9IC8vIEZldGNoIGJsb2IgYW5kIGlkc1xuICAgICk7XG5cbiAgICBjb25zb2xlLmxvZyhgREIgU2VydmljZTogRm91bmQgcmVjb3JkICh1c2luZyBzZXNzaW9uX2lkKTpgLCByZWNvcmQpO1xuXG4gICAgaWYgKHJlY29yZD8uYm9keV9ibG9iKSB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCBib2R5QmxvYiA9IEpTT04ucGFyc2UocmVjb3JkLmJvZHlfYmxvYik7XG4gICAgICAgIGNvbnNvbGUubG9nKGBEQiBTZXJ2aWNlOiBQYXJzZWQgYm9keV9ibG9iOmAsIGJvZHlCbG9iKTtcblxuICAgICAgICAvLyBBc3N1bWluZyBzdHJ1Y3R1cmUgaXMgeyB0eXBlOiAnYWknLCBkYXRhOiB7IGNvbnRlbnQ6ICdsYW5nfHByb21wdHx1cmwnIH0gfSBcbiAgICAgICAgLy8gQU5EIHBvdGVudGlhbGx5IG90aGVyIGZpZWxkcyBsaWtlIHJlcG9Db3VudCwgYW5pbWFsU2VsZWN0aW9uIHVuZGVyIGRhdGFcbiAgICAgICAgaWYgKGJvZHlCbG9iLnR5cGUgPT09ICdhaScgJiYgYm9keUJsb2IuZGF0YT8uY29udGVudCkge1xuICAgICAgICAgIGNvbnN0IGNvbnRlbnQgPSBib2R5QmxvYi5kYXRhLmNvbnRlbnQ7XG4gICAgICAgICAgY29uc3QgW2xhbmd1YWdlcywgcHJvbXB0LCBnaXRodWJVcmxdID0gY29udGVudC5zcGxpdCgnfCcpLm1hcCgoZmllbGQ6IHN0cmluZykgPT4gZmllbGQudHJpbSgpKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBFeHRyYWN0IHBvdGVudGlhbCBleHRyYSBmaWVsZHMgZnJvbSBib2R5QmxvYi5kYXRhXG4gICAgICAgICAgY29uc3QgcmVwb0NvdW50ID0gYm9keUJsb2IuZGF0YS5yZXBvQ291bnQ7IFxuICAgICAgICAgIGNvbnN0IGFuaW1hbFNlbGVjdGlvbiA9IGJvZHlCbG9iLmRhdGEuYW5pbWFsU2VsZWN0aW9uO1xuXG4gICAgICAgICAgY29uc3QgdXNlckRldGFpbHM6IFVzZXJEZXRhaWxzUmVjb3JkID0ge1xuICAgICAgICAgICAgX2lkOiByZWNvcmQuX2lkLFxuICAgICAgICAgICAgc2Vzc2lvbl9pZDogcmVjb3JkLnNlc3Npb25faWQsXG4gICAgICAgICAgICB1c2VybmFtZTogcmVjb3JkLnNlc3Npb25faWQsIC8vIFVzZSBzZXNzaW9uX2lkIGFzIHRoZSB1c2VybmFtZSBmaWVsZCBmb3IgcmV0dXJuIGNvbnNpc3RlbmN5XG4gICAgICAgICAgICBsYW5ndWFnZXMsXG4gICAgICAgICAgICBwcm9tcHQsXG4gICAgICAgICAgICBnaXRodWJVcmwsXG4gICAgICAgICAgICByZXBvQ291bnQsIC8vIFdpbGwgYmUgdW5kZWZpbmVkIGlmIG5vdCBwcmVzZW50IGluIGJsb2JcbiAgICAgICAgICAgIGFuaW1hbFNlbGVjdGlvbiwgLy8gV2lsbCBiZSB1bmRlZmluZWQgaWYgbm90IHByZXNlbnQgaW4gYmxvYlxuICAgICAgICAgIH07XG4gICAgICAgICAgY29uc29sZS5sb2coYERCIFNlcnZpY2U6IFBhcnNlZCB1c2VyIGRldGFpbHMgZnJvbSBibG9iOmAsIHVzZXJEZXRhaWxzKTtcbiAgICAgICAgICByZXR1cm4gdXNlckRldGFpbHM7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKGBEQiBTZXJ2aWNlOiBib2R5X2Jsb2IgZm91bmQgYnV0IGNvbnRlbnQgZm9ybWF0IHVuZXhwZWN0ZWQgZm9yICR7bm9ybWFsaXplZFVzZXJuYW1lfWApO1xuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChwYXJzZUVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoYERCIFNlcnZpY2U6IEVycm9yIHBhcnNpbmcgYm9keV9ibG9iIGZvciAke25vcm1hbGl6ZWRVc2VybmFtZX06YCwgcGFyc2VFcnJvcik7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIGNvbnNvbGUubG9nKGBEQiBTZXJ2aWNlOiBObyB2YWxpZCB1c2VyIGRldGFpbHMgZm91bmQgb3IgcGFyc2VkIGZvciAke25vcm1hbGl6ZWRVc2VybmFtZX1gKTtcbiAgICByZXR1cm4gbnVsbDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiREIgU2VydmljZTogRXJyb3IgZmV0Y2hpbmcgdXNlciBkZXRhaWxzOlwiLCBlcnJvcik7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cbn1cblxuLy8gRXhwb3J0IHRoZSBjbGllbnQgZ2V0dGVyIGZvciBhZHZhbmNlZCB1c2UgY2FzZXNcbmV4cG9ydCB7IGdldEFzdHJhQ2xpZW50IH07ICJdLCJuYW1lcyI6WyJEYXRhQVBJQ2xpZW50IiwiYXN0cmFDbGllbnQiLCJnZXRBc3RyYUNsaWVudCIsImVuZHBvaW50IiwicHJvY2VzcyIsImVudiIsIkFTVFJBX0RCX0VORFBPSU5UIiwidG9rZW4iLCJBU1RSQV9EQl9BUFBMSUNBVElPTl9UT0tFTiIsIkVycm9yIiwiY29uc29sZSIsImxvZyIsImNsaWVudCIsImRiIiwiZXJyb3IiLCJnZXRJbWFnZXNDb2xsZWN0aW9uIiwiY29sbGVjdGlvbiIsImdldFVzZXJEZXRhaWxzQ29sbGVjdGlvbiIsImdldEFsbEltYWdlcyIsInJlY29yZHMiLCJmaW5kIiwidG9BcnJheSIsImxlbmd0aCIsImdldEltYWdlQnlVc2VybmFtZSIsInVzZXJuYW1lIiwibm9ybWFsaXplZFVzZXJuYW1lIiwidG9Mb3dlckNhc2UiLCJ1cHNlcnRJbWFnZSIsImltYWdlRGF0YSIsImV4aXN0aW5nUmVjb3JkIiwiZmluZE9uZSIsImltYWdlUmVjb3JkIiwicmVzdWx0IiwiX2lkIiwidXBkYXRlT25lIiwiJHNldCIsImluc2VydE9uZSIsImdldFVzZXJEZXRhaWxzIiwidXNlckRldGFpbHNDb2xsZWN0aW9uIiwicmVjb3JkIiwic2Vzc2lvbl9pZCIsInByb2plY3Rpb24iLCJib2R5X2Jsb2IiLCJib2R5QmxvYiIsIkpTT04iLCJwYXJzZSIsInR5cGUiLCJkYXRhIiwiY29udGVudCIsImxhbmd1YWdlcyIsInByb21wdCIsImdpdGh1YlVybCIsInNwbGl0IiwibWFwIiwiZmllbGQiLCJ0cmltIiwicmVwb0NvdW50IiwiYW5pbWFsU2VsZWN0aW9uIiwidXNlckRldGFpbHMiLCJ3YXJuIiwicGFyc2VFcnJvciJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/lib/db/astra.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/@datastax/astra-db-ts/dist/api/fetch sync recursive":
/*!*****************************************************************!*\
  !*** ./node_modules/@datastax/astra-db-ts/dist/api/fetch/ sync ***!
  \*****************************************************************/
/***/ ((module) => {

function webpackEmptyContext(req) {
	var e = new Error("Cannot find module '" + req + "'");
	e.code = 'MODULE_NOT_FOUND';
	throw e;
}
webpackEmptyContext.keys = () => ([]);
webpackEmptyContext.resolve = webpackEmptyContext;
webpackEmptyContext.id = "(rsc)/./node_modules/@datastax/astra-db-ts/dist/api/fetch sync recursive";
module.exports = webpackEmptyContext;

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.ts&appDir=%2FUsers%2Fdavid.gilardi%2Fcodebeasts%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdavid.gilardi%2Fcodebeasts&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.ts&appDir=%2FUsers%2Fdavid.gilardi%2Fcodebeasts%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdavid.gilardi%2Fcodebeasts&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_david_gilardi_codebeasts_app_api_gallery_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/gallery/route.ts */ \"(rsc)/./app/api/gallery/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/gallery/route\",\n        pathname: \"/api/gallery\",\n        filename: \"route\",\n        bundlePath: \"app/api/gallery/route\"\n    },\n    resolvedPagePath: \"/Users/david.gilardi/codebeasts/app/api/gallery/route.ts\",\n    nextConfigOutput,\n    userland: _Users_david_gilardi_codebeasts_app_api_gallery_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZnYWxsZXJ5JTJGcm91dGUmcGFnZT0lMkZhcGklMkZnYWxsZXJ5JTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZ2FsbGVyeSUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmRhdmlkLmdpbGFyZGklMkZjb2RlYmVhc3RzJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRmRhdmlkLmdpbGFyZGklMkZjb2RlYmVhc3RzJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUErRjtBQUN2QztBQUNxQjtBQUNRO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvZGF2aWQuZ2lsYXJkaS9jb2RlYmVhc3RzL2FwcC9hcGkvZ2FsbGVyeS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvZ2FsbGVyeS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dhbGxlcnlcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2dhbGxlcnkvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvZGF2aWQuZ2lsYXJkaS9jb2RlYmVhc3RzL2FwcC9hcGkvZ2FsbGVyeS9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHdvcmtBc3luY1N0b3JhZ2UsXG4gICAgICAgIHdvcmtVbml0QXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgd29ya0FzeW5jU3RvcmFnZSwgd29ya1VuaXRBc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.ts&appDir=%2FUsers%2Fdavid.gilardi%2Fcodebeasts%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdavid.gilardi%2Fcodebeasts&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/@datastax","vendor-chunks/safe-stable-stringify","vendor-chunks/uuidv7"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fgallery%2Froute&page=%2Fapi%2Fgallery%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgallery%2Froute.ts&appDir=%2FUsers%2Fdavid.gilardi%2Fcodebeasts%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fdavid.gilardi%2Fcodebeasts&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();